DROP DATABASE IF EXISTS BANK_SYSTEM;

CREATE DATABASE BANK_SYSTEM;

USE BANK_SYSTEM;

DROP TABLE IF EXISTS CUSTOMER;
CREATE TABLE CUSTOMER
(
	CUSTOMER_ID INT UNSIGNED NOT NULL,
	
	FIRST_NAME VARCHAR(20) NOT NULL,
	MIDDLE_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	GENDER VARCHAR(20) NOT NULL,
	DATE_OF_BIRTH DATE NOT NULL,
	MARTIAL_STATUS VARCHAR(20) NOT NULL DEFAULT "NO",
	
	CURRENT_ADDRESS VARCHAR(255) NOT NULL,
	PARMANET_ADDRESS VARCHAR(255) NOT NULL,
	
	QUALIFICATION VARCHAR(20),
		
	OCCUPATION VARCHAR(20) NOT NULL,
	ANNUAL_INCOME VARCHAR(10) NOT NULL DEFAULT "0",
	PAN_CARD_NO VARCHAR(20),
	
	EMAIL VARCHAR(60),
	MOBILE_NO VARCHAR(20),
	
	PHOTOGRAPH VARCHAR(60) NOT NULL,
	SIGNATURE VARCHAR(60) NOT NULL,
	
	CONSTRAINT PK_CUSTOMER_CUSTOMER_ID PRIMARY KEY (CUSTOMER_ID),
	CONSTRAINT CK_CUSTOMER_GENDER CHECK (GENDER IN ("FEMALE", "MALE", "TRANSGENDER")),
	CONSTRAINT CK_CUSTOMER_MARTIAL_STATUS CHECK (MARTIAL_STATUS IN ("YES", "NO"))
);

DROP TABLE IF EXISTS NOMINEE_DETAILS;
CREATE TABLE NOMINEE_DETAILS
(
	CUSTOMER_ID INT UNSIGNED NOT NULL,
	N_FIRST_NAME VARCHAR(20) NOT NULL,
	N_MIDDLE_NAME VARCHAR(20) NOT NULL,
	N_LAST_NAME VARCHAR(20) NOT NULL,
	N_DATE_OF_BIRTH DATE NOT NULL,
	RELATION VARCHAR(20) NOT NULL,
	ADDRESS VARCHAR(255)NOT NULL,
	CONTACT_NO VARCHAR(20),
	
	CONSTRAINT FK_NOMINEES_DETAILS_CUSTOMER_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID)
);

DROP TABLE IF EXISTS BRANCH_LIST;
CREATE TABLE BRANCH_LIST
(
	BRANCH_CODE VARCHAR(20) NOT NULL,
	IFSC_CODE VARCHAR(20) NOT NULL,
	LOCATION VARCHAR(20) NOT NULL,
	ADDRESS VARCHAR(255) NOT NULL,
	TELEPHONE_NO VARCHAR(20) NOT NULL,
	FAX_NO VARCHAR(20) NOT NULL,
	
	CONSTRAINT PK_BRANCH_LIST_BRANCH_CODE PRIMARY KEY (BRANCH_CODE)
);

DROP TABLE IF EXISTS ACCOUNT;
CREATE TABLE ACCOUNT
(
	SERIAL_NO INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE KEY,
	ACCOUNT_NO VARCHAR(20) NOT NULL,
	
	ACCOUNT_TYPE VARCHAR(20) NOT NULL DEFAULT "SAVING",
	OPEN_DATE DATE,
	
	NET_BANKING VARCHAR(10) NOT NULL DEFAULT "NO",
	DEBIT_CARD VARCHAR(10) NOT NULL DEFAULT "NO",
	CREDIT_CARD VARCHAR(10) NOT NULL DEFAULT "NO",
	CHECK_BOOK VARCHAR(10) NOT NULL DEFAULT "NO",
	LOAN VARCHAR(10) NOT NULL DEFAULT "NO",
	
	ACCOUNT_BALANCE DECIMAL(10,2)NOT NULL DEFAULT 0,
	
	CLOSE_DATE DATE,
	
	CONSTRAINT PK_ACCOUNT_ACCOUNT_NO PRIMARY KEY (ACCOUNT_NO),
	CONSTRAINT CK_ACCOUNT_ACCOUNT_TYPE CHECK (ACCOUNT_TYPE IN ("CURRENT", "SAVING")),
	CONSTRAINT CK_ACCOUNT_NET_BANKING CHECK (NET_BANKING IN ("YES", "NO")),
	CONSTRAINT CK_ACCOUNT_DEBIT_CARD CHECK (DEBIT_CARD IN ("YES", "NO")),
	CONSTRAINT CK_ACCOUNT_CREDIT_CARD CHECK (CREDIT_CARD IN ("YES", "NO")),
	CONSTRAINT CK_ACCOUNT_CHECK_BOOK CHECK (CHECK_BOOK IN ("YES", "NO")),
	CONSTRAINT CK_ACCOUNT_LOAN CHECK (LOAN IN ("YES", "NO")),
	CONSTRAINT CK_ACCOUNT_ACCOUNT_BALANCE CHECK (ACCOUNT_BALANCE >=0)
);

DROP TABLE IF EXISTS ACCOUNT_BRANCH_RELATION;
CREATE TABLE ACCOUNT_BRANCH_RELATION
(
	BRANCH_CODE VARCHAR(20) NOT NULL,
	ACCOUNT_NO VARCHAR(20) NOT NULL,
	CONSTRAINT FK_ACCOUNT_BRANCH_RELATION_BRANCH_CODE FOREIGN KEY (BRANCH_CODE) REFERENCES BRANCH_LIST (BRANCH_CODE),
	CONSTRAINT FK_ACCOUNT_BRANCH_RELATION_ACCOUNT_NO FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT (ACCOUNT_NO),
	CONSTRAINT PK_ACCOUNT_BRANCH_RELATION PRIMARY KEY(BRANCH_CODE, ACCOUNT_NO)
);

DROP TABLE IF EXISTS CUSTOMER_ACCOUNT_RELATION;
CREATE TABLE CUSTOMER_ACCOUNT_RELATION
(
	CUSTOMER_ID INT UNSIGNED NOT NULL,
	ACCOUNT_NO VARCHAR(20) NOT NULL,
	
	CONSTRAINT FK_CUSTOMER_ACCOUNT_RELATION_CUSTOMER_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID),
	CONSTRAINT FK_CUSTOMER_ACCOUNT_RELATION_ACCOUNT_NO FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT (ACCOUNT_NO),
	
	CONSTRAINT PK_CUSTOMER_ACCOUNT_RELATION PRIMARY KEY (CUSTOMER_ID, ACCOUNT_NO)
);

DROP TABLE IF EXISTS TYPES_OF_LOAN;
CREATE TABLE TYPES_OF_LOAN
(
	LOAN_TYPE VARCHAR(20) NOT NULL,
	INTEREST_RATE VARCHAR(10) NOT NULL DEFAULT "0",
	MAX_AMT_OF_LOAN VARCHAR(10) NOT NULL DEFAULT "0",
	DESCRIPTION TEXT,
	
	CONSTRAINT PK_TYPES_OF_LOAN_LOAN_TYPE PRIMARY KEY (LOAN_TYPE)
);

DROP TABLE IF EXISTS LOAN;
CREATE TABLE LOAN
(
	LOAN_ID VARCHAR(20) NOT NULL,
	LOAN_TYPE VARCHAR(20) NOT NULL,
	DATE_OF_BROWING DATE NOT NULL,
	
	LOAN_AMOUNT VARCHAR(10) NOT NULL DEFAULT "0",
	INTEREST_RATE VARCHAR(10) NOT NULL DEFAULT "0",
	TOTAL_AMT_HAS_TO_PAY VARCHAR(10) NOT NULL DEFAULT "0",
	NO_OF_INSTALLMENT VARCHAR(10) NOT NULL DEFAULT "0",
	LOAN_PAY_START_DATE DATE NOT NULL,	
	INSTALLMENT_AMOUNT VARCHAR(10) NOT NULL DEFAULT "0",
	LAST_INSTALLMENT_DATE DATE NOT NULL,
	
	ACCOUNT_NO VARCHAR(20) NOT NULL,
	LOAN_STATUS VARCHAR(20) NOT NULL DEFAULT "NOT PAID",
	
	CONSTRAINT PK_LOAN_LOAN_ID PRIMARY KEY (LOAN_ID),
	CONSTRAINT FK_LOAN_LOAN_TYPE FOREIGN KEY (LOAN_TYPE) REFERENCES TYPES_OF_LOAN (LOAN_TYPE),
	CONSTRAINT FK_LOAN_ACCOUNT_NO FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT (ACCOUNT_NO),
	CONSTRAINT CK_LOAN_LOAN_STATUS CHECK (LOAN_STATUS IN ("PAID", "NOT PAID"))
);

DROP TABLE IF EXISTS LOAN_PAYMENT_DETAILS;
CREATE TABLE LOAN_PAYMENT_DETAILS
(
	LOAN_ID VARCHAR(20) NOT NULL,
	PAY_DATE DATE NOT NULL,
	INSTALLMENT_NO VARCHAR(10) NOT NULL DEFAULT "0",
	AMOUNT_LEFT VARCHAR(10) NOT NULL DEFAULT "0",
	NEXT_INSTALLMENT DATE,
	
	CONSTRAINT FK_LOAN_PAYMENT_DETAILS_LOAN_ID FOREIGN KEY (LOAN_ID) REFERENCES LOAN (LOAN_ID),
	CONSTRAINT PK_LOAN_PAYMENT_DETAILS PRIMARY KEY (LOAN_ID, INSTALLMENT_NO)
);

DROP TABLE IF EXISTS ACCOUNT_STATEMENTS;
CREATE TABLE ACCOUNT_STATEMENTS
(
	ACCOUNT_NO VARCHAR(20) NOT NULL,
	TRANSACTION_DATE DATE NOT NULL,
	DESCRIPTIONS VARCHAR(60) NOT NULL,
	DEPOSIT DECIMAL(10, 2),
	WITHDRAW DECIMAL(10, 2),
	ACCOUNT_BALANCE DECIMAL(10,2) DEFAULT 0,
	
	CONSTRAINT FK_ACCOUNT_STATEMENTS_ACCOUNT_NO FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT (ACCOUNT_NO)
);

DROP TABLE IF EXISTS NET_BANKING_LOGIN;
CREATE TABLE NET_BANKING_LOGIN
(
	NET_BSN VARCHAR(20) NOT NULL,
	ACTIVATION_DATE DATE,
	ACCOUNT_NO VARCHAR(20),
	USERNAME VARCHAR(60) NOT NULL,
	PASSWORD VARCHAR(60) NOT NULL,
	DACTIVATION_DATE DATE,
	
	CONSTRAINT PK_NET_BANKING_LOGIN_NET_BSN PRIMARY KEY (NET_BSN),
	CONSTRAINT FK_NET_BANKING_LOGIN_ACCOUNT_NO FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT (ACCOUNT_NO),
	CONSTRAINT UK_NET_BANKING_LOGIN_USERNAME UNIQUE KEY (USERNAME)
);

DROP TABLE IF EXISTS CREDIT_CARD;
CREATE TABLE CREDIT_CARD
(
	CREDIT_CARD_NO VARCHAR(30) NOT NULL,
	ACTIVATION_DATE DATE,
	ACCOUNT_NO VARCHAR(20),
	CARD_AMOUNT_LIMIT DECIMAL(10,2)NOT NULL DEFAULT 0,
	EXPIRE_DATE DATE,
	DEACTIVATION_DATE DATE,
	
	CONSTRAINT PK_CREDIT_CARD_CREDIT_CARD_NO PRIMARY KEY (CREDIT_CARD_NO),
	CONSTRAINT FK_CREDIT_CARD_ACCOUNT_NO FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT (ACCOUNT_NO),
	CONSTRAINT CK_CREDIT_CARD_EXPIRE_DATE CHECK (EXPIRE_DATE > ACTIVATION_DATE)
);

DROP TABLE IF EXISTS DEBIT_CARD;
CREATE TABLE DEBIT_CARD
(
	DEBIT_CARD_NO VARCHAR(30) NOT NULL,
	ACTIVATION_DATE DATE,
	ACCOUNT_NO VARCHAR(20),
	CARD_AMOUNT_LIMIT DECIMAL(10,2)NOT NULL DEFAULT 0,
	EXPIRE_DATE DATE,
	DEACTIVATION_DATE DATE,
	
	CONSTRAINT PK_DEBIT_CARD_DEBIT_CARD_NO PRIMARY KEY (DEBIT_CARD_NO),
	CONSTRAINT FK_DEBIT_CARD_ACCOUNT_NO FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT (ACCOUNT_NO),
	CONSTRAINT CK_DEBIT_CARD_EXPIRE_DATE CHECK (EXPIRE_DATE > ACTIVATION_DATE)
);

DROP TABLE IF EXISTS CHECK_BOOK;
CREATE TABLE CHECK_BOOK
(
	CHECK_BOOK_ID VARCHAR(20) NOT NULL,
	NO_OF_CHECKS DECIMAL(10,0) NOT NULL DEFAULT 0,
	STARTING_CK_NO DECIMAL(10,0) NOT NULL DEFAULT 0,
	ENDING_CK_NO DECIMAL(10,0) NOT NULL DEFAULT 0,
	
	ISSUE_DATE DATE,
	ACCOUNT_NO VARCHAR(20),
	
	CONSTRAINT PK_CHECK_BOOK_CHECK_BOOK_ID PRIMARY KEY (CHECK_BOOK_ID),
	CONSTRAINT FK_CHECK_BOOK_ACCOUNT_NO FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT (ACCOUNT_NO)
);

DROP TABLE IF EXISTS DEMAND_DRAFT;
CREATE TABLE DEMAND_DRAFT
(
	DEMAND_DRAFT_NO VARCHAR(20) NOT NULL,
	IN_FAVOUR_OF VARCHAR(255) NOT NULL,
	DD_AMOUNT VARCHAR(10) NOT NULL DEFAULT "0",
	PAYABLE_AT VARCHAR(60) NOT NULL,
	CREATION_DATE DATE NOT NULL,
	EXPIRE_DATE DATE NOT NULL,
	
	APPLICANT_NAME VARCHAR(60) NOT NULL,
	APPLICANT_CONTACT_NO VARCHAR(20),
	APPLICANT_ADDRESS VARCHAR(255),
	CREATION_TYPE VARCHAR(20) NOT NULL,
	COMMINSION_AMOUNT VARCHAR(10) NOT NULL DEFAULT "0",
	
	CONSTRAINT PK_DEMAND_DRAFT_DEMAND_DRAFT_NO PRIMARY KEY (DEMAND_DRAFT_NO),
	CONSTRAINT CK_DEMAND_DRAFT_EXPIRE_DATE CHECK (EXPIRE_DATE > CREATION_DATE)
);

DROP TABLE IF EXISTS TRANSACTION_DETAIL_TYPES;
CREATE TABLE TRANSACTION_DETAIL_TYPES
(
	TRANSACTION_DETAIL VARCHAR(60) NOT NULL,
	DESCRIPTION TEXT,
	
	CONSTRAINT PK_TRANSACTION_DETAIL_TYPES_TRANSACTION_DETAIL PRIMARY KEY (TRANSACTION_DETAIL)
);

DROP TABLE IF EXISTS DAILY_TRANSACTIONS;
CREATE TABLE DAILY_TRANSACTIONS
(
	TRANSACTION_ID INT UNSIGNED AUTO_INCREMENT NOT NULL,
	T_AMOUNT DECIMAL(10,2) NOT NULL DEFAULT 0,
	T_DATE_TIME DATETIME NOT NULL,
	TRANSACTION_DETAIL VARCHAR(60) NOT NULL,
	FROM_ACCOUNT VARCHAR(20),
	TO_OR_ON_ACCOUNT VARCHAR(20) NOT NULL,
	
	CONSTRAINT PK_DAILY_TRANSACTIONS_TRANSACTION_ID PRIMARY KEY (TRANSACTION_ID),
	CONSTRAINT FK_DAILY_TRANSACTIONS_TRANSACTION_DETAIL FOREIGN KEY (TRANSACTION_DETAIL) REFERENCES TRANSACTION_DETAIL_TYPES (TRANSACTION_DETAIL)
);


DROP TABLE IF EXISTS JOBS;
CREATE TABLE JOBS
(
	JOB_NAME VARCHAR(20) NOT NULL,
	DESCRIPTION TEXT,
	
	CONSTRAINT PK_JOBS_JOB_NAME PRIMARY KEY (JOB_NAME)
);

DROP TABLE IF EXISTS DEPARTMENT;
CREATE TABLE DEPARTMENT
(
	DEPARTMENT_NO INT UNSIGNED,
	DEPARTMENT_NAME VARCHAR(60) NOT NULL,
	DESCRIPTION TEXT,
	
	CONSTRAINT PK_DEPARTMENT_DEPARTMENT_NO PRIMARY KEY (DEPARTMENT_NO)
);

DROP TABLE IF EXISTS EMPLOYEE;
CREATE TABLE EMPLOYEE
(
	EMPLOYEE_ID VARCHAR(20) NOT NULL,
	FIRST_NAME VARCHAR(20) NOT NULL,
	MIDDLE_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	GENDER VARCHAR(20) NOT NULL,
	DATE_OF_BIRTH DATE NOT NULL,
	
	PARMANENT_ADDRESS TEXT NOT NULL,
	CURRENT_ADDRESS TEXT NOT NULL,
	CONTACT_NO VARCHAR(20) NOT NULL,
	E_MAIL VARCHAR(60) NOT NULL,
	EMERGENCY_CONTACT_NO VARCHAR(20) NOT NULL,
	HIGHEST_QUALIFICATION VARCHAR(20) NOT NULL,
	
	DESIGNATION VARCHAR(20) NOT NULL,
	DATE_OF_JOINING DATE NOT NULL,
	DEPARTMENT_NO INT UNSIGNED NOT NULL,
	BRANCH_CODE VARCHAR(20) NOT NULL,
	
	CONSTRAINT PK_EMPLOYEE_EMPLOYEE_ID PRIMARY KEY (EMPLOYEE_ID),
	CONSTRAINT FK_EMPLOYEE_DESIGNATION FOREIGN KEY (DESIGNATION) REFERENCES JOBS (JOB_NAME),
	CONSTRAINT FK_EMPLOYEE_DEPARTMENT_NO FOREIGN KEY (DEPARTMENT_NO) REFERENCES DEPARTMENT (DEPARTMENT_NO),
	CONSTRAINT FK_EMPLOYEE_BRANCH_CODE FOREIGN KEY (BRANCH_CODE) REFERENCES BRANCH_LIST (BRANCH_CODE),
	CONSTRAINT CK_EMPLOYEE_GENDER CHECK (GENDER IN ("FEMALE", "MALE", "TRANSGENDER"))
);

DROP TABLE IF EXISTS BRANCH_MANAGER;
CREATE TABLE BRANCH_MANAGER
(
	MANAGER_ID VARCHAR(20) NOT NULL,
	BRANCH_CODE VARCHAR(20) NOT NULL,
	
	CONSTRAINT FK_BRANCH_MANAGER_MANAGER_ID FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID),
	CONSTRAINT FK_BRANCH_MANAGER_BRANCH_CODE FOREIGN KEY (BRANCH_CODE) REFERENCES BRANCH_LIST (BRANCH_CODE),
	CONSTRAINT PK_BRANCH_MANAGER PRIMARY KEY (MANAGER_ID, BRANCH_CODE)
);

DROP TABLE IF EXISTS DEPARTMENT_MANAGER;
CREATE TABLE DEPARTMENT_MANAGER
(
	MANAGER_ID VARCHAR(20) NOT NULL,
	DEPARTMENT_NO INT UNSIGNED NOT NULL,
	
	CONSTRAINT FK_DEPARTMENT_MANAGER_MANAGER_ID FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID),
	CONSTRAINT FK_DEPARTMENT_MANAGER_DEPARTMENT_NO FOREIGN KEY (DEPARTMENT_NO) REFERENCES DEPARTMENT (DEPARTMENT_NO),
	CONSTRAINT PK_DEPARTMENT_MANAGER PRIMARY KEY (MANAGER_ID, DEPARTMENT_NO)
);

DROP TABLE IF EXISTS EMPLOYEE_ACCOUNT_INFO;
CREATE TABLE EMPLOYEE_ACCOUNT_INFO
(
	EMPLOYEE_ID VARCHAR(20) NOT NULL,
	ACCOUNT_NO VARCHAR(20) NOT NULL,
	
	CONSTRAINT FK_EMPLOYEE_ACCOUNT_INFO_EMPLOYEE_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID),
	CONSTRAINT FK_EMPLOYEE_ACCOUNT_INFO_ACCOUNT_NO FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT (ACCOUNT_NO),
	CONSTRAINT PK_EMPLOYEE_ACCOUNT_INFO PRIMARY KEY (EMPLOYEE_ID, ACCOUNT_NO)
);

DROP TABLE IF EXISTS EMPLOYEE_DEPENDENTS;
CREATE TABLE EMPLOYEE_DEPENDENTS
(
	EMPLOYEE_ID VARCHAR(20) NOT NULL,
	D_FIRST_NAME VARCHAR(20) NOT NULL,
	D_MIDDLE_NAME VARCHAR(20),
	D_LAST_NAME VARCHAR(20),
	RELATION VARCHAR(20) NOT NULL,
	
	CONSTRAINT FK_EMPLOYEE_DEPENDENTS_EMPLOYEE_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID)
);

DROP TABLE IF EXISTS BLOCKED_IP_MAC;
CREATE TABLE BLOCKED_IP_MAC
(
	IP VARCHAR(20) NOT NULL,
	MAC_ADDRESS VARCHAR(20) NOT NULL,
	BLOCKED_DATE DATE NOT NULL,
	NO_OF_ATTEMPTS INT(10)
);


DROP TABLE IF EXISTS EMPLOYEE_LEAVING_DETAILS;
CREATE TABLE EMPLOYEE_LEAVING_DETAILS
(
	EMPLOYEE_ID VARCHAR(20) NOT NULL,
	DATE_OF_LEAVING DATE NOT NULL,
	L_TYPE VARCHAR(20) NOT NULL,
	REASON TEXT,
	
	CONSTRAINT FK_EMPLOYEE_LEAVING_DETAILS_EMPLOYEE_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID)
);

DROP TABLE IF EXISTS BANK_SERVICES;
CREATE TABLE BANK_SERVICES
(
	SERVICE_CODE VARCHAR(20) NOT NULL,
	SERVICE_NAME VARCHAR(20) NOT NULL,
	DESCRIPTION TEXT,
	
	CONSTRAINT PK_BANK_SERVICES_SERVICE_CODE PRIMARY KEY (SERVICE_CODE)
);

DROP TABLE IF EXISTS APPLICATION_FORMS;
CREATE TABLE APPLICATION_FORMS
(
	APPLICATION_ID VARCHAR(20) NOT NULL,
	CUSTOMER_ID INT UNSIGNED NOT NULL,
	APPLICATION_CODE VARCHAR(20) NOT NULL,
	APPLICATION_DATE DATE NOT NULL,
	STATUS VARCHAR(20) NOT NULL DEFAULT "PENDING",
	
	CONSTRAINT FK_APPLICATION_FORMS_CUSTOMER_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
	CONSTRAINT FK_APPLICATION_FORMS_APPLICATION_CODE FOREIGN KEY (APPLICATION_CODE) REFERENCES BANK_SERVICES (SERVICE_CODE),
	CONSTRAINT PK_APPLICATION_FORMS_APPLICATION_ID PRIMARY KEY (APPLICATION_ID),
	CONSTRAINT CK_APPLICATION_FORMS_STATUS CHECK (STATUS IN ("PENDING", "APPROVED", "REJECTED"))
);

DROP TABLE IF EXISTS DESKTOP_APP_USERS;
CREATE TABLE DESKTOP_APP_USERS
(
	USERNAME VARCHAR(60) NOT NULL,
	PASSWORD VARCHAR(60) NOT NULL,
	ACCOUNT_LEVEL VARCHAR(20) NOT NULL,
	ACCOUNT_STATUS VARCHAR(20) NOT NULL DEFAULT "LOCKED",
	
	CONSTRAINT PK_DESKTOP_APP_USERS_USERNAME PRIMARY KEY (USERNAME),
	CONSTRAINT CK_DESKTOP_APP_USERS_ACCOUNT_STATUS CHECK (ACCOUNT_STATUS IN ("UNLOCKED", "LOCKED")),
	CONSTRAINT CK_DESKTOP_APP_USERS_ACCOUNT_LEVEL CHECK (ACCOUNT_LEVEL IN ("ADMIN","HR", "MANAGER", "OFFICER", "CLERK"))
);


DROP TABLE IF EXISTS EMPLOYEE_SALARY;
CREATE TABLE EMPLOYEE_SALARY
(
	EMPLOYEE_ID VARCHAR(20) NOT NULL,
	BASIC FLOAT(10) NOT NULL DEFAULT 0,
	HRA FLOAT(10) DEFAULT 0,
	TA FLOAT(10) DEFAULT 0,
	DA FLOAT(10) DEFAULT 0,
	MA FLOAT(10) DEFAULT 0,
	OA FLOAT(10) DEFAULT 0,
	PF FLOAT(10) DEFAULT 0,
	
	TOTAL_SALARY FLOAT DEFAULT 0,
	
	CONSTRAINT FK_EMPLOYEE_SALARY_EMPLOYEE_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID),
	CONSTRAINT CK_EMPLOYEE_SALARY_TOTAL_SALARY CHECK (TOTAL_SALARY =(BASIC + HRA + TA + DA + MA + OA - PF))
);


DROP TABLE IF EXISTS EMPLOYEE_ATTENDENCE;
CREATE TABLE EMPLOYEE_ATTENDENCE
(
	EMPLOYEE_ID VARCHAR(20) NOT NULL,
	A_DATE DATE NOT NULL,
	IN_TIME TIME NOT NULL,
	OUT_TIME TIME NOT NULL,
	WORK_HOUR VARCHAR(10) NOT NULL DEFAULT "0",
	
	CONSTRAINT FK_EMPLOYEE_ATTENDENCE_EMPLOYEE_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID)
);

DROP TABLE IF EXISTS BANK_CONSTRAINTS;
CREATE TABLE BANK_CONSTRAINTS
(
	CONSTRAINT_NAME VARCHAR(20) NOT NULL,
	CONSTRAINT_VALUE VARCHAR(10) NOT NULL DEFAULT "0",
	DESCRIPTION TEXT,
	
	CONSTRAINT PK_BANK_CONSTRAINTS_CONSTRAINT_NAME PRIMARY KEY (CONSTRAINT_NAME)
);

DROP TABLE IF EXISTS REQUEST_TYPE;
CREATE TABLE REQUEST_TYPE
(
	REQUEST_TYPE VARCHAR(20) NOT NULL,
	DESCRIPTION TEXT,
	
	CONSTRAINT PK_REQUEST_TYPE_REQUEST_TYPE PRIMARY KEY (REQUEST_TYPE)
);

DROP TABLE IF EXISTS REQUEST_RECEIVE;
CREATE TABLE REQUEST_RECEIVE
(
	REQUEST_TYPE VARCHAR(20) NOT NULL,
	R_NUMBER VARCHAR(20) NOT NULL,
	ISSUE_DATE DATE NOT NULL,
	ACCOUNT_NO VARCHAR(20) NOT NULL,
	ACCOUNT_HOLDER VARCHAR(60) NOT NULL,
	R_DATE DATE NOT NULL,
	R_AMOUNT VARCHAR(20) DEFAULT "NA",
	R_STATUS VARCHAR(20) NOT NULL DEFAULT "PENDING",
	
	CONSTRAINT FK_REQUEST_RECEIVE_REQUEST_TYPE FOREIGN KEY (REQUEST_TYPE) REFERENCES REQUEST_TYPE (REQUEST_TYPE),
	CONSTRAINT PK_REQUEST_RECEIVE PRIMARY KEY (REQUEST_TYPE, R_NUMBER, R_DATE),
	CONSTRAINT CK_REQUEST_RECEIVE_R_STATUS CHECK (R_STATUS IN ("PENDING", "APPROVED", "REJECTED"))
);

DROP TABLE IF EXISTS REQUEST_SEND;
CREATE TABLE REQUEST_SEND
(
	REQUEST_TYPE VARCHAR(20) NOT NULL,
	R_NUMBER VARCHAR(20) NOT NULL,
	ISSUE_DATE DATE NOT NULL,
	ACCOUNT_NO VARCHAR(20) NOT NULL,
	ACCOUNT_HOLDER VARCHAR(60) NOT NULL,
	R_DATE DATE NOT NULL,
	R_AMOUNT VARCHAR(20) DEFAULT "NA",
	
	
	CONSTRAINT FK_REQUEST_SEND_REQUEST_TYPE FOREIGN KEY (REQUEST_TYPE) REFERENCES REQUEST_TYPE (REQUEST_TYPE),
	CONSTRAINT PK_REQUEST_SEND PRIMARY KEY (REQUEST_TYPE, R_NUMBER, R_DATE)
	
);

DROP TABLE IF EXISTS FIXED_DEPOSIT;
CREATE TABLE FIXED_DEPOSIT
(
	FIXED_DEPOSIT_NO VARCHAR(20) NOT NULL,
	CUSTOMER_ID INT UNSIGNED NOT NULL,
	FIXED_AMOUNT VARCHAR(10) NOT NULL DEFAULT "0",
	
	FD_DATE DATE NOT NULL,
	MATURITY_AMOUNT VARCHAR(10) NOT NULL DEFAULT "0",
	INTEREST_RATE VARCHAR(10) NOT NULL DEFAULT "0",
	MATURITY_DATE DATE NOT NULL,
	
	CONSTRAINT PK_FIXED_DEPOSIT_FIXED_DEPOSIT_NO PRIMARY KEY (FIXED_DEPOSIT_NO),
	CONSTRAINT FK_FIXED_DEPOSIT_CUSTOMER_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID)
);

DROP TABLE IF EXISTS NET_BANKING_ACCOUNT_PAIR;
CREATE TABLE NET_BANKING_ACCOUNT_PAIR
(
	PRI_ACCOUNT_NO VARCHAR(20) NOT NULL,
	SEC_ACCOUNT_NO VARCHAR(20) NOT NULL,
	SEC_BANK_NAME VARCHAR(60) NOT NULL,
	SEC_BRANCH VARCHAR(60) NOT NULL,
	SEC_IFC_CODE VARCHAR(20) NOT NULL,
	SEC_ADD_DATE DATE NOT NULL,
	
	CONSTRAINT FK_NET_BANKING_ACCOUNT_PAIR_PRI_ACCOUNT_NO FOREIGN KEY (PRI_ACCOUNT_NO) REFERENCES ACCOUNT(ACCOUNT_NO),
	CONSTRAINT PK_NET_BANKING_ACCOUNT_PAIR PRIMARY KEY (PRI_ACCOUNT_NO, SEC_ACCOUNT_NO)
);

DROP TABLE IF EXISTS DESKTOP_APP_SETTINGS;
CREATE TABLE DESKTOP_APP_SETTINGS
(
	NO_OF_CONNECTIONS VARCHAR(10)NOT NULL DEFAULT "0"
);

SHOW TABLES;
